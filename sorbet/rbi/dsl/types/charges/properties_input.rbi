# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Types::Charges::PropertiesInput`.
# Please instead update this file by running `bin/tapioca dsl Types::Charges::PropertiesInput`.


class Types::Charges::PropertiesInput
  sig { returns(T.nilable(::String)) }
  def amount; end

  sig { returns(T.nilable(T::Hash[::String, T.untyped])) }
  def custom_properties; end

  sig { returns(T.nilable(::String)) }
  def fixed_amount; end

  sig { returns(T.nilable(::Integer)) }
  def free_units; end

  sig { returns(T.nilable(::Integer)) }
  def free_units_per_events; end

  sig { returns(T.nilable(::String)) }
  def free_units_per_total_aggregation; end

  sig { returns(T.nilable(T::Array[::Types::Charges::GraduatedPercentageRangeInput])) }
  def graduated_percentage_ranges; end

  sig { returns(T.nilable(T::Array[::Types::Charges::GraduatedRangeInput])) }
  def graduated_ranges; end

  sig { returns(T.nilable(T::Array[::String])) }
  def grouped_by; end

  sig { returns(T.nilable(::Integer)) }
  def package_size; end

  sig { returns(T.nilable(::String)) }
  def per_transaction_max_amount; end

  sig { returns(T.nilable(::String)) }
  def per_transaction_min_amount; end

  sig { returns(T.nilable(::String)) }
  def rate; end

  sig { returns(T.nilable(T::Array[::Types::Charges::VolumeRangeInput])) }
  def volume_ranges; end
end

# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `adyen-ruby-api-library` gem.
# Please instead update this file by running `bin/tapioca gem adyen-ruby-api-library`.


# This utility method inherits from Hash, but allows keys to be read
# and updated with dot notation. Usage is entirely optional (i.e.,  hash values
# can still be accessed via symbol and string keys).
#
# Based on: https://gist.github.com/winfred/2185384#file-ruby-dot-hash-access-rb
#
# source://adyen-ruby-api-library//lib/adyen/version.rb#1
module Adyen; end

# source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#3
class Adyen::APICredentialsCompanyLevelApi < ::Adyen::Service
  # @return [APICredentialsCompanyLevelApi] a new instance of APICredentialsCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#37
  def create_api_credential(request, company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#19
  def get_api_credential(company_id, api_credential_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#10
  def list_api_credentials(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#28
  def update_api_credential(request, company_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#3
class Adyen::APICredentialsMerchantLevelApi < ::Adyen::Service
  # @return [APICredentialsMerchantLevelApi] a new instance of APICredentialsMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#37
  def create_api_credential(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#19
  def get_api_credential(merchant_id, api_credential_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#10
  def list_api_credentials(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#28
  def update_api_credential(request, merchant_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_credentials_merchant_level_api.rb#4
  def version=(_arg0); end
end

# catchall for errors which don't have more specific classes
#
# source://adyen-ruby-api-library//lib/adyen/errors.rb#107
class Adyen::APIError < ::Adyen::AdyenError
  # @return [APIError] a new instance of APIError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#108
  def initialize(msg, request, response, code); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#3
class Adyen::APIKeyCompanyLevelApi < ::Adyen::Service
  # @return [APIKeyCompanyLevelApi] a new instance of APIKeyCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#10
  def generate_new_api_key(company_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#3
class Adyen::APIKeyMerchantLevelApi < ::Adyen::Service
  # @return [APIKeyMerchantLevelApi] a new instance of APIKeyMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#10
  def generate_new_api_key(merchant_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/api_key_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#3
class Adyen::AccountCompanyLevelApi < ::Adyen::Service
  # @return [AccountCompanyLevelApi] a new instance of AccountCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#19
  def get_company_account(company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#10
  def list_company_accounts(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#28
  def list_merchant_accounts(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#3
class Adyen::AccountHoldersApi < ::Adyen::Service
  # @return [AccountHoldersApi] a new instance of AccountHoldersApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#37
  def create_account_holder(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#10
  def get_account_holder(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#19
  def get_all_balance_accounts_of_account_holder(id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#28
  def update_account_holder(request, id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/account_holders_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#3
class Adyen::AccountMerchantLevelApi < ::Adyen::Service
  # @return [AccountMerchantLevelApi] a new instance of AccountMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#28
  def create_merchant_account(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#19
  def get_merchant_account(merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#10
  def list_merchant_accounts(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#37
  def request_to_activate_merchant_account(merchant_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#3
class Adyen::AccountStoreLevelApi < ::Adyen::Service
  # @return [AccountStoreLevelApi] a new instance of AccountStoreLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#73
  def create_store(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#64
  def create_store_by_merchant_id(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#19
  def get_store(merchant_id, store_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#37
  def get_store_by_id(store_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#28
  def list_stores(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#10
  def list_stores_by_merchant_id(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#46
  def update_store(request, merchant_id, store_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#55
  def update_store_by_id(request, store_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/account_store_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/errors.rb#8
class Adyen::AdyenError < ::StandardError
  # @return [AdyenError] a new instance of AdyenError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#11
  def initialize(request = T.unsafe(nil), response = T.unsafe(nil), msg = T.unsafe(nil), code = T.unsafe(nil)); end

  # Returns the value of attribute code.
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#9
  def code; end

  # mask PCI data in request
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#35
  def mask_fields(request); end

  # Returns the value of attribute msg.
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#9
  def msg; end

  # Returns the value of attribute request.
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#9
  def request; end

  # Returns the value of attribute response.
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#9
  def response; end
end

# source://adyen-ruby-api-library//lib/adyen/result.rb#4
class Adyen::AdyenResult
  # @return [AdyenResult] a new instance of AdyenResult
  #
  # source://adyen-ruby-api-library//lib/adyen/result.rb#7
  def initialize(response, header, status); end

  # Returns the value of attribute header.
  #
  # source://adyen-ruby-api-library//lib/adyen/result.rb#5
  def header; end

  # Returns the value of attribute response.
  #
  # source://adyen-ruby-api-library//lib/adyen/result.rb#5
  def response; end

  # Returns the value of attribute status.
  #
  # source://adyen-ruby-api-library//lib/adyen/result.rb#5
  def status; end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#3
class Adyen::AllowedOriginsCompanyLevelApi < ::Adyen::Service
  # @return [AllowedOriginsCompanyLevelApi] a new instance of AllowedOriginsCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#37
  def create_allowed_origin(request, company_id, api_credential_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#10
  def delete_allowed_origin(company_id, api_credential_id, origin_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#28
  def get_allowed_origin(company_id, api_credential_id, origin_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#19
  def list_allowed_origins(company_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#3
class Adyen::AllowedOriginsMerchantLevelApi < ::Adyen::Service
  # @return [AllowedOriginsMerchantLevelApi] a new instance of AllowedOriginsMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#37
  def create_allowed_origin(request, merchant_id, api_credential_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#10
  def delete_allowed_origin(merchant_id, api_credential_id, origin_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#28
  def get_allowed_origin(merchant_id, api_credential_id, origin_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#19
  def list_allowed_origins(merchant_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/allowed_origins_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#3
class Adyen::AndroidFilesCompanyLevelApi < ::Adyen::Service
  # @return [AndroidFilesCompanyLevelApi] a new instance of AndroidFilesCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#19
  def get_android_app(company_id, id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#10
  def list_android_apps(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#28
  def list_android_certificates(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/android_files_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/errors.rb#70
class Adyen::AuthenticationError < ::Adyen::AdyenError
  # @return [AuthenticationError] a new instance of AuthenticationError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#71
  def initialize(msg, request); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#3
class Adyen::BalanceAccountsApi < ::Adyen::Service
  # @return [BalanceAccountsApi] a new instance of BalanceAccountsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#73
  def create_balance_account(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#82
  def create_sweep(request, balance_account_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#10
  def delete_sweep(balance_account_id, sweep_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#46
  def get_all_payment_instruments_for_balance_account(id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#19
  def get_all_sweeps_for_balance_account(balance_account_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#37
  def get_balance_account(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#28
  def get_sweep(balance_account_id, sweep_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#64
  def update_balance_account(request, id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#55
  def update_sweep(request, balance_account_id, sweep_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/balance_accounts_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#3
class Adyen::BalanceControlService < ::Adyen::Service
  # @return [BalanceControlService] a new instance of BalanceControlService
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#11
  def balance_transfer(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balanceControlService.rb#6
Adyen::BalanceControlService::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#14
class Adyen::BalancePlatform
  # @return [BalancePlatform] a new instance of BalancePlatform
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#18
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#24
  def account_holders_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#28
  def balance_accounts_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#32
  def bank_account_validation_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#36
  def grant_accounts_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#40
  def grant_offers_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#44
  def network_tokens_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#48
  def payment_instrument_groups_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#52
  def payment_instruments_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#56
  def platform_api; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#15
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#15
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#60
  def transaction_rules_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#64
  def transfer_routes_api; end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#15
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#15
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform.rb#17
Adyen::BalancePlatform::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#3
class Adyen::BankAccountValidationApi < ::Adyen::Service
  # @return [BankAccountValidationApi] a new instance of BankAccountValidationApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#10
  def validate_bank_account_identification(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/bank_account_validation_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#3
class Adyen::BinLookup < ::Adyen::Service
  # @return [BinLookup] a new instance of BinLookup
  #
  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#11
  def get3ds_availability(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#20
  def get_cost_estimate(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/binLookup.rb#6
Adyen::BinLookup::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#3
class Adyen::BusinessLinesApi < ::Adyen::Service
  # @return [BusinessLinesApi] a new instance of BusinessLinesApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#37
  def create_business_line(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#10
  def delete_business_line(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#19
  def get_business_line(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#28
  def update_business_line(request, id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/business_lines_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#3
class Adyen::CapitalApi < ::Adyen::Service
  # @return [CapitalApi] a new instance of CapitalApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#10
  def get_capital_account(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#19
  def get_grant_reference_details(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#28
  def request_grant_payout(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/capital_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#10
class Adyen::Checkout
  # @return [Checkout] a new instance of Checkout
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#14
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#20
  def classic_checkout_sdk_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#24
  def modifications_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#28
  def orders_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#32
  def payment_links_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#36
  def payments_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#40
  def recurring_api; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#11
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#11
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#44
  def utility_api; end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#11
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#11
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/checkout.rb#13
Adyen::Checkout::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#3
class Adyen::ClassicCheckoutSDKApi < ::Adyen::Service
  # @return [ClassicCheckoutSDKApi] a new instance of ClassicCheckoutSDKApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#10
  def payment_session(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#19
  def verify_payment_result(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/classic_checkout_sdk_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/client.rb#14
class Adyen::Client
  # @return [Client] a new instance of Client
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#18
  def initialize(ws_user: T.unsafe(nil), ws_password: T.unsafe(nil), api_key: T.unsafe(nil), oauth_token: T.unsafe(nil), env: T.unsafe(nil), adapter: T.unsafe(nil), mock_port: T.unsafe(nil), live_url_prefix: T.unsafe(nil), mock_service_url_base: T.unsafe(nil), connection_options: T.unsafe(nil), adapter_options: T.unsafe(nil)); end

  # Returns the value of attribute adapter.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def adapter; end

  # Sets the attribute adapter
  #
  # @param value the value to set the attribute adapter to.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def adapter=(_arg0); end

  # Returns the value of attribute adapter_options.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#16
  def adapter_options; end

  # Returns the value of attribute api_key.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def api_key; end

  # Sets the attribute api_key
  #
  # @param value the value to set the attribute api_key to.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def api_key=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#274
  def balance_control_service; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#258
  def balance_platform; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#250
  def bin_lookup; end

  # send request to adyen API
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#120
  def call_adyen_api(service, action, request_data, headers, version, _with_application_info: T.unsafe(nil)); end

  # services
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#218
  def checkout; end

  # Returns the value of attribute client.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def client; end

  # Sets the attribute client
  #
  # @param value the value to set the attribute client to.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def client=(_arg0); end

  # Returns the value of attribute connection_options.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#16
  def connection_options; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#242
  def data_protection; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#246
  def dispute; end

  # Returns the value of attribute env.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#16
  def env; end

  # make sure that env can only be :live, :test, or :mock
  #
  # @raise [ArgumentError]
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#39
  def env=(value); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#254
  def legal_entity_management; end

  # remove 'https' from live_url_prefix if necessary
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#48
  def live_url_prefix=(value); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#266
  def management; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#234
  def marketpay; end

  # Returns the value of attribute oauth_token.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def oauth_token; end

  # Sets the attribute oauth_token
  #
  # @param value the value to set the attribute oauth_token to.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def oauth_token=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#222
  def payment; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#226
  def payout; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#238
  def pos_terminal_management; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#230
  def recurring; end

  # construct full URL from service and endpoint
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#109
  def service_url(service, action, version); end

  # base URL for API given service and @env
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#54
  def service_url_base(service); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#270
  def stored_value; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#278
  def terminal_cloud_api; end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#262
  def transfers; end

  # Returns the value of attribute ws_password.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def ws_password; end

  # Sets the attribute ws_password
  #
  # @param value the value to set the attribute ws_password to.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def ws_password=(_arg0); end

  # Returns the value of attribute ws_user.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def ws_user; end

  # Sets the attribute ws_user
  #
  # @param value the value to set the attribute ws_user to.
  #
  # source://adyen-ruby-api-library//lib/adyen/client.rb#15
  def ws_user=(_arg0); end

  private

  # source://adyen-ruby-api-library//lib/adyen/client.rb#284
  def auth_header(auth_type, faraday); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#301
  def auth_type(service, request_data); end

  # source://adyen-ruby-api-library//lib/adyen/client.rb#311
  def validate_auth_type(service, request_data); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#3
class Adyen::ClientKeyCompanyLevelApi < ::Adyen::Service
  # @return [ClientKeyCompanyLevelApi] a new instance of ClientKeyCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#10
  def generate_new_client_key(company_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#3
class Adyen::ClientKeyMerchantLevelApi < ::Adyen::Service
  # @return [ClientKeyMerchantLevelApi] a new instance of ClientKeyMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#10
  def generate_new_client_key(merchant_id, api_credential_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/client_key_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/errors.rb#94
class Adyen::ConfigurationError < ::Adyen::AdyenError
  # @return [ConfigurationError] a new instance of ConfigurationError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#95
  def initialize(msg, request); end
end

# source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#3
class Adyen::DataProtection < ::Adyen::Service
  # @return [DataProtection] a new instance of DataProtection
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#11
  def request_subject_erasure(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/dataProtection.rb#6
Adyen::DataProtection::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/dispute.rb#4
class Adyen::Dispute < ::Adyen::Service
  # @return [Dispute] a new instance of Dispute
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dispute.rb#9
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dispute.rb#5
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/dispute.rb#5
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/dispute.rb#7
Adyen::Dispute::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#3
class Adyen::DocumentsApi < ::Adyen::Service
  # @return [DocumentsApi] a new instance of DocumentsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#10
  def delete_document(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#19
  def get_document(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#28
  def update_document(request, id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#37
  def upload_document_for_verification_checks(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/documents_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/errors.rb#82
class Adyen::FormatError < ::Adyen::AdyenError
  # @return [FormatError] a new instance of FormatError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#83
  def initialize(msg, request, response); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#3
class Adyen::GrantAccountsApi < ::Adyen::Service
  # @return [GrantAccountsApi] a new instance of GrantAccountsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#10
  def get_grant_account(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_accounts_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#3
class Adyen::GrantOffersApi < ::Adyen::Service
  # @return [GrantOffersApi] a new instance of GrantOffersApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#10
  def get_all_available_grant_offers(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#19
  def get_grant_offer(grant_offer_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/grant_offers_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/hash_with_accessors.rb#11
class Adyen::HashWithAccessors < ::Hash
  # source://adyen-ruby-api-library//lib/adyen/hash_with_accessors.rb#12
  def method_missing(method, *args); end

  private

  # @return [Boolean]
  #
  # source://adyen-ruby-api-library//lib/adyen/hash_with_accessors.rb#37
  def respond_to_missing?(method, include_private = T.unsafe(nil)); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#3
class Adyen::HostedOnboardingApi < ::Adyen::Service
  # @return [HostedOnboardingApi] a new instance of HostedOnboardingApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#28
  def get_link_to_adyenhosted_onboarding_page(request, id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#19
  def get_onboarding_link_theme(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#10
  def list_hosted_onboarding_page_themes(headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/hosted_onboarding_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#3
class Adyen::InitializationApi < ::Adyen::Service
  # @return [InitializationApi] a new instance of InitializationApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#10
  def store_detail(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#19
  def store_detail_and_submit_third_party(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#28
  def submit_third_party(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/initialization_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#3
class Adyen::InstantPayoutsApi < ::Adyen::Service
  # @return [InstantPayoutsApi] a new instance of InstantPayoutsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#10
  def payout(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/instant_payouts_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#3
class Adyen::LegalEntitiesApi < ::Adyen::Service
  # @return [LegalEntitiesApi] a new instance of LegalEntitiesApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#46
  def check_legal_entitys_verification_errors(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#37
  def create_legal_entity(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#19
  def get_all_business_lines_under_legal_entity(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#10
  def get_legal_entity(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#28
  def update_legal_entity(request, id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/legal_entities_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#10
class Adyen::LegalEntityManagement
  # @return [LegalEntityManagement] a new instance of LegalEntityManagement
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#14
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#20
  def business_lines_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#24
  def documents_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#28
  def hosted_onboarding_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#32
  def legal_entities_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#36
  def pci_questionnaires_api; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#11
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#11
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#40
  def terms_of_service_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#44
  def transfer_instruments_api; end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#11
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#11
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement.rb#13
Adyen::LegalEntityManagement::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/management.rb#32
class Adyen::Management
  # @return [Management] a new instance of Management
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#36
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#58
  def account_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#62
  def account_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#66
  def account_store_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#70
  def allowed_origins_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#74
  def allowed_origins_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#78
  def android_files_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#42
  def api_credentials_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#46
  def api_credentials_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#50
  def api_key_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#54
  def api_key_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#82
  def client_key_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#86
  def client_key_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#90
  def my_api_credential_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#94
  def payment_methods_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#98
  def payout_settings_merchant_level_api; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#33
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#33
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#102
  def split_configuration_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#106
  def terminal_actions_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#110
  def terminal_actions_terminal_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#114
  def terminal_orders_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#118
  def terminal_orders_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#122
  def terminal_settings_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#126
  def terminal_settings_merchant_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#130
  def terminal_settings_store_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#134
  def terminal_settings_terminal_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#138
  def terminals_terminal_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#142
  def users_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#146
  def users_merchant_level_api; end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#33
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#33
  def version=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#150
  def webhooks_company_level_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/management.rb#154
  def webhooks_merchant_level_api; end
end

# source://adyen-ruby-api-library//lib/adyen/services/management.rb#35
Adyen::Management::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#6
module Adyen::Marketpay; end

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#32
class Adyen::Marketpay::Account < ::Adyen::Service
  # @return [Account] a new instance of Account
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#37
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#33
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#33
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#35
Adyen::Marketpay::Account::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#63
class Adyen::Marketpay::Fund < ::Adyen::Service
  # @return [Fund] a new instance of Fund
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#68
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#64
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#64
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#66
Adyen::Marketpay::Fund::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#103
class Adyen::Marketpay::Hop < ::Adyen::Service
  # @return [Hop] a new instance of Hop
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#108
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#104
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#104
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#106
Adyen::Marketpay::Hop::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#7
class Adyen::Marketpay::Marketpay
  # @return [Marketpay] a new instance of Marketpay
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#10
  def initialize(client); end

  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#15
  def account; end

  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#19
  def fund; end

  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#27
  def hop; end

  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#23
  def notification; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#8
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#8
  def service=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#83
class Adyen::Marketpay::Notification < ::Adyen::Service
  # @return [Notification] a new instance of Notification
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#88
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#84
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#84
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/marketpay.rb#86
Adyen::Marketpay::Notification::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#3
class Adyen::ModificationsApi < ::Adyen::Service
  # @return [ModificationsApi] a new instance of ModificationsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#10
  def cancel_authorised_payment(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#28
  def cancel_authorised_payment_by_psp_reference(request, payment_psp_reference, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#37
  def capture_authorised_payment(request, payment_psp_reference, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#46
  def refund_captured_payment(request, payment_psp_reference, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#55
  def refund_or_cancel_payment(request, payment_psp_reference, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#19
  def update_authorised_amount(request, payment_psp_reference, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/modifications_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#3
class Adyen::MyAPICredentialApi < ::Adyen::Service
  # @return [MyAPICredentialApi] a new instance of MyAPICredentialApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#46
  def add_allowed_origin(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#37
  def get_allowed_origin_details(origin_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#28
  def get_allowed_origins(headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#19
  def get_api_credential_details(headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#10
  def remove_allowed_origin(origin_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/my_api_credential_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/version.rb#2
Adyen::NAME = T.let(T.unsafe(nil), String)

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#3
class Adyen::NetworkTokensApi < ::Adyen::Service
  # @return [NetworkTokensApi] a new instance of NetworkTokensApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#10
  def get_network_token(network_token_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#19
  def update_network_token(request, network_token_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/network_tokens_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#3
class Adyen::OrdersApi < ::Adyen::Service
  # @return [OrdersApi] a new instance of OrdersApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#19
  def cancel_order(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#28
  def get_balance_of_gift_card(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#10
  def orders(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/orders_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#3
class Adyen::PCIQuestionnairesApi < ::Adyen::Service
  # @return [PCIQuestionnairesApi] a new instance of PCIQuestionnairesApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#28
  def generate_pci_questionnaire(request, id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#19
  def get_pci_questionnaire(id, pciid, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#10
  def get_pci_questionnaire_details(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#37
  def sign_pci_questionnaire(request, id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/pci_questionnaires_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payment.rb#3
class Adyen::Payment < ::Adyen::Service
  # @return [Payment] a new instance of Payment
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#11
  def adjust_authorisation(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#20
  def authorise(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#29
  def authorise3d(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#38
  def authorise3ds2(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#47
  def cancel(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#56
  def cancel_or_refund(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#65
  def capture(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#74
  def donate(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#83
  def get_authentication_result(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#92
  def refund(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#101
  def retrieve3ds2_result(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#110
  def technical_cancel(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#4
  def version=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/payment.rb#119
  def void_pending_refund(request, headers: T.unsafe(nil)); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payment.rb#6
Adyen::Payment::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#3
class Adyen::PaymentInstrumentGroupsApi < ::Adyen::Service
  # @return [PaymentInstrumentGroupsApi] a new instance of PaymentInstrumentGroupsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#28
  def create_payment_instrument_group(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#19
  def get_all_transaction_rules_for_payment_instrument_group(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#10
  def get_payment_instrument_group(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instrument_groups_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#3
class Adyen::PaymentInstrumentsApi < ::Adyen::Service
  # @return [PaymentInstrumentsApi] a new instance of PaymentInstrumentsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#55
  def create_payment_instrument(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#37
  def get_all_transaction_rules_for_payment_instrument(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#28
  def get_pan_of_payment_instrument(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#10
  def get_payment_instrument(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#19
  def list_network_tokens(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#46
  def update_payment_instrument(request, id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/payment_instruments_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#3
class Adyen::PaymentLinksApi < ::Adyen::Service
  # @return [PaymentLinksApi] a new instance of PaymentLinksApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#10
  def get_payment_link(link_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#28
  def payment_links(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#19
  def update_payment_link(request, link_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payment_links_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#3
class Adyen::PaymentMethodsMerchantLevelApi < ::Adyen::Service
  # @return [PaymentMethodsMerchantLevelApi] a new instance of PaymentMethodsMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#55
  def add_apple_pay_domain(request, merchant_id, payment_method_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#10
  def get_all_payment_methods(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#28
  def get_apple_pay_domains(merchant_id, payment_method_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#19
  def get_payment_method_details(merchant_id, payment_method_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#46
  def request_payment_method(request, merchant_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#37
  def update_payment_method(request, merchant_id, payment_method_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payment_methods_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#3
class Adyen::PaymentsApi < ::Adyen::Service
  # @return [PaymentsApi] a new instance of PaymentsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#19
  def card_details(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#28
  def donations(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#10
  def get_result_of_payment_session(session_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#37
  def payment_methods(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#46
  def payments(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#55
  def payments_details(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#64
  def sessions(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/payments_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payout.rb#6
class Adyen::Payout
  # @return [Payout] a new instance of Payout
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#10
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#16
  def initialization_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#20
  def instant_payouts_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#24
  def reviewing_api; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#7
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#7
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#7
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout.rb#7
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payout.rb#9
Adyen::Payout::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#3
class Adyen::PayoutSettingsMerchantLevelApi < ::Adyen::Service
  # @return [PayoutSettingsMerchantLevelApi] a new instance of PayoutSettingsMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#46
  def add_payout_setting(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#10
  def delete_payout_setting(merchant_id, payout_settings_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#28
  def get_payout_setting(merchant_id, payout_settings_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#19
  def list_payout_settings(merchant_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#37
  def update_payout_setting(request, merchant_id, payout_settings_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/payout_settings_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/errors.rb#76
class Adyen::PermissionError < ::Adyen::AdyenError
  # @return [PermissionError] a new instance of PermissionError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#77
  def initialize(msg, request, response); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#3
class Adyen::PlatformApi < ::Adyen::Service
  # @return [PlatformApi] a new instance of PlatformApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#19
  def get_all_account_holders_under_balance_platform(id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#10
  def get_balance_platform(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/platform_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#3
class Adyen::PosTerminalManagement < ::Adyen::Service
  # @return [PosTerminalManagement] a new instance of PosTerminalManagement
  #
  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#11
  def assign_terminals(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#20
  def find_terminal(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#29
  def get_stores_under_account(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#38
  def get_terminal_details(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#47
  def get_terminals_under_account(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/posTerminalManagement.rb#6
Adyen::PosTerminalManagement::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#3
class Adyen::Recurring < ::Adyen::Service
  # @return [Recurring] a new instance of Recurring
  #
  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#11
  def create_permit(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#20
  def disable(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#29
  def disable_permit(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#38
  def list_recurring_details(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#47
  def notify_shopper(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#56
  def schedule_account_updater(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/recurring.rb#6
Adyen::Recurring::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#3
class Adyen::RecurringApi < ::Adyen::Service
  # @return [RecurringApi] a new instance of RecurringApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#10
  def delete_token_for_stored_payment_details(stored_payment_method_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#19
  def get_tokens_for_stored_payment_details(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/recurring_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#3
class Adyen::ReviewingApi < ::Adyen::Service
  # @return [ReviewingApi] a new instance of ReviewingApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#10
  def confirm_third_party(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#19
  def decline_third_party(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/payout/reviewing_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/errors.rb#88
class Adyen::ServerError < ::Adyen::AdyenError
  # @return [ServerError] a new instance of ServerError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#89
  def initialize(msg, request, response); end
end

# source://adyen-ruby-api-library//lib/adyen/services/service.rb#2
class Adyen::Service
  # @return [Service] a new instance of Service
  #
  # source://adyen-ruby-api-library//lib/adyen/services/service.rb#14
  def initialize(client, version, service, method_names = T.unsafe(nil), with_application_info = T.unsafe(nil)); end

  # create query parameter from a hash
  #
  # source://adyen-ruby-api-library//lib/adyen/services/service.rb#30
  def create_query_string(arr); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/service.rb#3
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/service.rb#3
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/service.rb#3
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/service.rb#3
  def version=(_arg0); end

  class << self
    # add snake case to camel case converter to String
    # to convert rubinic method names to Adyen API methods
    #
    # i.e. snake_case -> snakeCase
    # note that the first letter is not capitalized as normal
    #
    # source://adyen-ruby-api-library//lib/adyen/services/service.rb#10
    def action_for_method_name(method_name); end
  end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#3
class Adyen::SplitConfigurationMerchantLevelApi < ::Adyen::Service
  # @return [SplitConfigurationMerchantLevelApi] a new instance of SplitConfigurationMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#82
  def create_rule(request, merchant_id, split_configuration_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#73
  def create_split_configuration(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#10
  def delete_split_configuration(merchant_id, split_configuration_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#19
  def delete_split_configuration_rule(merchant_id, split_configuration_id, rule_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#37
  def get_split_configuration(merchant_id, split_configuration_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#28
  def list_split_configurations(merchant_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#55
  def update_split_conditions(request, merchant_id, split_configuration_id, rule_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#46
  def update_split_configuration_description(request, merchant_id, split_configuration_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#64
  def update_split_logic(request, merchant_id, split_configuration_id, rule_id, split_logic_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/split_configuration_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#3
class Adyen::StoredValue < ::Adyen::Service
  # @return [StoredValue] a new instance of StoredValue
  #
  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#7
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#11
  def change_status(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#20
  def check_balance(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#29
  def issue(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#38
  def load(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#47
  def merge_balance(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#4
  def version=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#56
  def void_transaction(request, headers: T.unsafe(nil)); end
end

# source://adyen-ruby-api-library//lib/adyen/services/storedValue.rb#6
Adyen::StoredValue::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#3
class Adyen::TerminalActionsCompanyLevelApi < ::Adyen::Service
  # @return [TerminalActionsCompanyLevelApi] a new instance of TerminalActionsCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#19
  def get_terminal_action(company_id, action_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#10
  def list_terminal_actions(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#3
class Adyen::TerminalActionsTerminalLevelApi < ::Adyen::Service
  # @return [TerminalActionsTerminalLevelApi] a new instance of TerminalActionsTerminalLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#10
  def create_terminal_action(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_actions_terminal_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#3
class Adyen::TerminalCloudAPI < ::Adyen::Service
  # @return [TerminalCloudAPI] a new instance of TerminalCloudAPI
  #
  # source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#6
  def initialize(client); end

  # source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#28
  def async(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#10
  def connected_terminals(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/terminalCloudAPI.rb#19
  def sync(request, headers: T.unsafe(nil)); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#3
class Adyen::TerminalOrdersCompanyLevelApi < ::Adyen::Service
  # @return [TerminalOrdersCompanyLevelApi] a new instance of TerminalOrdersCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#91
  def cancel_order(company_id, order_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#82
  def create_order(request, company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#73
  def create_shipping_location(request, company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#46
  def get_order(company_id, order_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#10
  def list_billing_entities(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#37
  def list_orders(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#19
  def list_shipping_locations(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#28
  def list_terminal_models(company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#55
  def list_terminal_products(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#64
  def update_order(request, company_id, order_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#3
class Adyen::TerminalOrdersMerchantLevelApi < ::Adyen::Service
  # @return [TerminalOrdersMerchantLevelApi] a new instance of TerminalOrdersMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#91
  def cancel_order(merchant_id, order_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#82
  def create_order(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#73
  def create_shipping_location(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#46
  def get_order(merchant_id, order_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#10
  def list_billing_entities(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#37
  def list_orders(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#19
  def list_shipping_locations(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#28
  def list_terminal_models(merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#55
  def list_terminal_products(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#64
  def update_order(request, merchant_id, order_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_orders_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#3
class Adyen::TerminalSettingsCompanyLevelApi < ::Adyen::Service
  # @return [TerminalSettingsCompanyLevelApi] a new instance of TerminalSettingsCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#10
  def get_terminal_logo(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#19
  def get_terminal_settings(company_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#28
  def update_terminal_logo(request, company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#37
  def update_terminal_settings(request, company_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#3
class Adyen::TerminalSettingsMerchantLevelApi < ::Adyen::Service
  # @return [TerminalSettingsMerchantLevelApi] a new instance of TerminalSettingsMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#10
  def get_terminal_logo(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#19
  def get_terminal_settings(merchant_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#28
  def update_terminal_logo(request, merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#37
  def update_terminal_settings(request, merchant_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#3
class Adyen::TerminalSettingsStoreLevelApi < ::Adyen::Service
  # @return [TerminalSettingsStoreLevelApi] a new instance of TerminalSettingsStoreLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#10
  def get_terminal_logo(merchant_id, reference, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#28
  def get_terminal_logo_by_store_id(store_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#19
  def get_terminal_settings(merchant_id, reference, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#37
  def get_terminal_settings_by_store_id(store_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#46
  def update_terminal_logo(request, merchant_id, reference, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#64
  def update_terminal_logo_by_store_id(request, store_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#55
  def update_terminal_settings(request, merchant_id, reference, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#73
  def update_terminal_settings_by_store_id(request, store_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_store_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#3
class Adyen::TerminalSettingsTerminalLevelApi < ::Adyen::Service
  # @return [TerminalSettingsTerminalLevelApi] a new instance of TerminalSettingsTerminalLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#10
  def get_terminal_logo(terminal_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#19
  def get_terminal_settings(terminal_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#28
  def update_logo(request, terminal_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#37
  def update_terminal_settings(request, terminal_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminal_settings_terminal_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#3
class Adyen::TerminalsTerminalLevelApi < ::Adyen::Service
  # @return [TerminalsTerminalLevelApi] a new instance of TerminalsTerminalLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#10
  def list_terminals(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/terminals_terminal_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#3
class Adyen::TermsOfServiceApi < ::Adyen::Service
  # @return [TermsOfServiceApi] a new instance of TermsOfServiceApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#28
  def accept_terms_of_service(request, id, termsofservicedocumentid, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#37
  def get_terms_of_service_document(request, id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#10
  def get_terms_of_service_information_for_legal_entity(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#19
  def get_terms_of_service_status(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/terms_of_service_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#3
class Adyen::TransactionRulesApi < ::Adyen::Service
  # @return [TransactionRulesApi] a new instance of TransactionRulesApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#37
  def create_transaction_rule(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#10
  def delete_transaction_rule(transaction_rule_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#19
  def get_transaction_rule(transaction_rule_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#28
  def update_transaction_rule(request, transaction_rule_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transaction_rules_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#3
class Adyen::TransactionsApi < ::Adyen::Service
  # @return [TransactionsApi] a new instance of TransactionsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#10
  def get_all_transactions(headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#19
  def get_transaction(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transactions_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#3
class Adyen::TransferInstrumentsApi < ::Adyen::Service
  # @return [TransferInstrumentsApi] a new instance of TransferInstrumentsApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#37
  def create_transfer_instrument(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#10
  def delete_transfer_instrument(id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#19
  def get_transfer_instrument(id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#28
  def update_transfer_instrument(request, id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/legalEntityManagement/transfer_instruments_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#3
class Adyen::TransferRoutesApi < ::Adyen::Service
  # @return [TransferRoutesApi] a new instance of TransferRoutesApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#10
  def calculate_transfer_routes(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/balancePlatform/transfer_routes_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#6
class Adyen::Transfers
  # @return [Transfers] a new instance of Transfers
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#10
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#16
  def capital_api; end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#7
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#7
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#20
  def transactions_api; end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#24
  def transfers_api; end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#7
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#7
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/transfers.rb#9
Adyen::Transfers::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#3
class Adyen::TransfersApi < ::Adyen::Service
  # @return [TransfersApi] a new instance of TransfersApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#10
  def transfer_funds(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/transfers/transfers_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#3
class Adyen::UsersCompanyLevelApi < ::Adyen::Service
  # @return [UsersCompanyLevelApi] a new instance of UsersCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#37
  def create_new_user(request, company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#19
  def get_user_details(company_id, user_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#10
  def list_users(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#28
  def update_user_details(request, company_id, user_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#3
class Adyen::UsersMerchantLevelApi < ::Adyen::Service
  # @return [UsersMerchantLevelApi] a new instance of UsersMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#37
  def create_new_user(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#19
  def get_user_details(merchant_id, user_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#10
  def list_users(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#28
  def update_user(request, merchant_id, user_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/users_merchant_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#3
class Adyen::UtilityApi < ::Adyen::Service
  # @return [UtilityApi] a new instance of UtilityApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#10
  def get_apple_pay_session(request, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#19
  def origin_keys(request, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#4
  def service=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/checkout/utility_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#2
module Adyen::Utils; end

# source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#3
class Adyen::Utils::HmacValidator
  # <b>DEPRECATED:</b> Please use calculate_webhook_hmac() instead.
  #
  # source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#24
  def calculate_notification_hmac(notification_request_item, hmac_key); end

  # source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#29
  def calculate_webhook_hmac(webhook_request_item, hmac_key); end

  # source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#36
  def data_to_sign(webhook_request_item); end

  # <b>DEPRECATED:</b> Please use valid_webhook_hmac?() instead.
  #
  # @return [Boolean]
  #
  # source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#12
  def valid_notification_hmac?(notification_request_item, hmac_key); end

  # @return [Boolean]
  #
  # source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#16
  def valid_webhook_hmac?(webhook_request_item, hmac_key); end

  private

  # source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#43
  def fetch(hash, keys); end
end

# source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#5
Adyen::Utils::HmacValidator::DATA_SEPARATOR = T.let(T.unsafe(nil), String)

# source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#4
Adyen::Utils::HmacValidator::HMAC_ALGORITHM = T.let(T.unsafe(nil), String)

# source://adyen-ruby-api-library//lib/adyen/utils/hmac_validator.rb#6
Adyen::Utils::HmacValidator::WEBHOOK_VALIDATION_KEYS = T.let(T.unsafe(nil), Array)

# source://adyen-ruby-api-library//lib/adyen/version.rb#3
Adyen::VERSION = T.let(T.unsafe(nil), String)

# source://adyen-ruby-api-library//lib/adyen/errors.rb#100
class Adyen::ValidationError < ::Adyen::AdyenError
  # @return [ValidationError] a new instance of ValidationError
  #
  # source://adyen-ruby-api-library//lib/adyen/errors.rb#101
  def initialize(msg, request); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#3
class Adyen::WebhooksCompanyLevelApi < ::Adyen::Service
  # @return [WebhooksCompanyLevelApi] a new instance of WebhooksCompanyLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#55
  def generate_hmac_key(company_id, webhook_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#28
  def get_webhook(company_id, webhook_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#19
  def list_all_webhooks(company_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#10
  def remove_webhook(company_id, webhook_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#46
  def set_up_webhook(request, company_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#64
  def test_webhook(request, company_id, webhook_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#37
  def update_webhook(request, company_id, webhook_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_company_level_api.rb#4
  def version=(_arg0); end
end

# source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#3
class Adyen::WebhooksMerchantLevelApi < ::Adyen::Service
  # @return [WebhooksMerchantLevelApi] a new instance of WebhooksMerchantLevelApi
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#6
  def initialize(client, version = T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#55
  def generate_hmac_key(merchant_id, webhook_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#28
  def get_webhook(merchant_id, webhook_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#19
  def list_all_webhooks(merchant_id, headers: T.unsafe(nil), query_params: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#10
  def remove_webhook(merchant_id, webhook_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute service.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#4
  def service; end

  # Sets the attribute service
  #
  # @param value the value to set the attribute service to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#4
  def service=(_arg0); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#46
  def set_up_webhook(request, merchant_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#64
  def test_webhook(request, merchant_id, webhook_id, headers: T.unsafe(nil)); end

  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#37
  def update_webhook(request, merchant_id, webhook_id, headers: T.unsafe(nil)); end

  # Returns the value of attribute version.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#4
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://adyen-ruby-api-library//lib/adyen/services/management/webhooks_merchant_level_api.rb#4
  def version=(_arg0); end
end
